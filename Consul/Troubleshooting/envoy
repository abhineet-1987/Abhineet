# https://support.hashicorp.com/hc/en-us/articles/4409691756563-Accessing-and-Setting-Envoy-Logs-for-Consul
# To run envoy sidecar proxy in debug mode
consul connect envoy -token=${CONSUL_HTTP_TOKEN} -envoy-binary /usr/local/bin/envoy -sidecar-for client1 -- -l debug > /tmp/sidecar-proxy.log 2>&1 &


# Envoy Dataplane Diagnostic Data for Technical Support
https://support.hashicorp.com/hc/en-us/articles/40750522337171-Envoy-Dataplane-Diagnostic-Data-for-Technical-Support

curl http://localhost:19000/config_dump
curl http://localhost:19000/stats
curl http://localhost:19000/clusters
curl http://localhost:19000/listeners
curl http://localhost:19000/certs

# To generate bootstrap.config for given envoy setup, for eg:-

consul connect envoy -gateway=terminating -register -service us-west-gateway -address "172.31.9.104:8443" -bootstrap  

# this will output the bootstrap config for given envoy setup, you may save it to some file say bootstrap.json
# and then start envoy using "envoy --config-path bootstrap.json"

sudo consul connect envoy -gateway=terminating -register -service us-west-gateway -address "172.31.9.104:8443" -bootstrap -token "c5679db5-b59e-97e1-7460-59273bde4931" > /home/ec2-user/bootstrap.json

# To ssh into api gateway pod (we cannot ssh directly, hence use ephemeral container)
kubectl debug -it -n consul api-gateway-54467cc49b-kc642 --target api-gateway --image=nicolaka/netshoot -- sh       # Container specific  
kubectl debug -it -n consul api-gateway-54467cc49b-kc642 --image=nicolaka/netshoot -- sh               # Pod specific  

Without --target → You just add a new debug container into the pod (general troubleshooting).
With --target → You can inspect a specific container’s processes and state, which is critical when debugging multi-container pods



