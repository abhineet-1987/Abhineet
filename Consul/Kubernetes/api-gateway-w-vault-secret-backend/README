Note: Here I am deploying Consul and Vault both in default kubernetes namespace, but will deploy api gateway in consul namespace

https://developer.hashicorp.com/consul/docs/deploy/server/k8s/enterprise 
https://support.hashicorp.com/hc/en-us/articles/21375557655059-Consul-Vault-Integration-on-K8s-using-Helm-Chart
https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-minikube-tls
https://support.hashicorp.com/hc/en-us/articles/41900709789075-How-to-implement-traffic-failover-routing-for-Consul-service-hitting-external-sites-via-terminating-gateway

helm install vault hashicorp/vault --values vault_values.yaml

# Vault port forwarding from another terminal:
kubectl port-forward svc/vault 8200:8200

# Setting env variable
export VAULT_ADDR=http://127.0.0.1:8200
export VAULT_TOKEN=xxxxxxxxxxxxxx

# slight change from the above KB:-
vault write pki/roles/consul-server \
      allowed_domains="*" \
      allow_subdomains=true \
      allow_glob_domains=true \
      allow_bare_domains=true \
      allow_any_name=false \
      enforce_hostnames=false \
      require_cn=false \
      ttl="72h"

KUBE_HOST="https://kubernetes.default.svc"    (since I am using Kind here)

vault write auth/kubernetes/role/consul-server \
  bound_service_account_names=consul-server \
  bound_service_account_namespaces=default \
  policies="gossip-policy,consul-server,connect" \
  ttl=24h 

vault write auth/kubernetes/role/consul-client \
  bound_service_account_names=consul-client \
  bound_service_account_namespaces=default \
  policies="gossip-policy,ca-policy" \
  ttl=24h 

vault write auth/kubernetes/role/consul-ca \
  bound_service_account_names="*" \
  bound_service_account_namespaces=default \
  policies="ca-policy" \
  ttl=1h

# Consul license setup
secret=$(cat license.hclic)
kubectl create secret generic consul-ent-license --from-literal="key=${secret}"

helm install consul hashicorp/consul --values=consul_values.yaml

export CONSUL_HTTP_ADDR=https://127.0.0.1:8501
export CONSUL_HTTP_SSL_VERIFY=false
kubectl get secret consul-bootstrap-acl-token -o yaml
echo <token-copied-from-above> | base64 -d
export CONSUL_HTTP_TOKEN=xxxxxxxxxxxx
kubectl port-forward svc/consul-server 8501:8501    (on other terminal)

#Service Discovery Chain setup:-
consul namespace create -name "sandbox-dev"

curl --insecure --request PUT --data @ext-inst1.json --header "X-Consul-Namespace: sandbox-dev" --header "X-Consul-Token: dbd7f971-0538-dfd9-af52-44a2f2ed1a71" \
https://127.0.0.1:8501/v1/catalog/register
curl --insecure --request PUT --data @ext-inst2.json --header "X-Consul-Namespace: sandbox-dev" --header "X-Consul-Token: dbd7f971-0538-dfd9-af52-44a2f2ed1a71" \
https://127.0.0.1:8501/v1/catalog/register
curl --insecure --request PUT --data @ext-inst3.json --header "X-Consul-Namespace: sandbox-dev" --header "X-Consul-Token: dbd7f971-0538-dfd9-af52-44a2f2ed1a71" \
https://127.0.0.1:8501/v1/catalog/register

consul config write proxy-default.yaml
consul config write svc-router.json
consul config write service-resolver.json

kubectl apply -f terminating_gw.yaml
kubectl apply -f custom_obj.yaml

kubectl create ns consul
kubectl apply -f consul-api-gateway_woTLS.yaml

Create namespaces defined in namespace_create.txt
kubectl apply -f many_http.yaml
kubectl apply -f custom_http.yaml  (to create httproute for static server)

kubectl edit svc -n consul api-gateway   (change nodeport to 32339 as per config in kind's config)
When you'll hit the API gateway as curl -kv http://localhost:32339 you'll get below error:-
RBAC: access denied

Open Consul ui:
kubectl port-forward svc/consul-ui 8501:443
In browser open https://localhost:8501 and create intention from api gateway service in consul namespace to all other services.
Run "curl -kv http://localhost:32339" on your terminal and you can see hell world message

Go to ext-jsontest service in sandbox-dev namespace in consul ui and go to topology, there you'll see x, click on it, it will ask to create intention from static-server service to this service. Create it.






